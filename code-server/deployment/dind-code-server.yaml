apiVersion: v1
kind: Namespace
metadata:
  name: code-server
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: code-server
  name: code-server
  namespace: code-server
spec:
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: code-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: code-server
  name: code-server
  namespace: code-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: code-server
  template:
    metadata:
      labels:
        app: code-server
    spec:
      initContainers:
      - name: copy-docker-binary
        image: docker:stable-dind
        command: ['sh', '-c', 'cp /usr/local/bin/docker /code-server-bin/']
        volumeMounts:
        - name: code-server-usr-local-bin
          mountPath: /code-server-bin
      containers:
      - name: code-server
        #image: codercom/code-server:4.5.1
        #image: linuxserver/code-server
        image: kimhaksoo/code-server:v0.11
        imagePullPolicy: Always
        ports:
        - containerPort: 8080 
        # envFrom:
        # - configMapRef:
        #     name: code-server
        # - secretRef:
        #     name: code-server
        env:
          - name: PASSWORD
            value: "code321"
        securityContext: 
            privileged: true
            capabilities:
              add: ["NET_ADMIN"]
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: false
        - name: code-server-usr-local-bin
          mountPath: /usr/local/bin
      - name: dind-daemon
        image: docker:stable-dind
        env:
        - name: DOCKER_TLS_CERTDIR
          value: ""
        resources:
          requests:
            cpu: 20m
            memory: 512Mi
        securityContext:
            privileged: true
            capabilities:
              add: ["NET_ADMIN"]
        volumeMounts:
          - name: docker-graph-storage
            mountPath: /var/lib/docker
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: code-server-config
      - name: docker-graph-storage
        emptyDir: {}
      - name: code-server-usr-local-bin
        emptyDir: {}
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: code-server-config
  namespace: code-server 
spec:
  accessModes:
    - "ReadWriteMany"
  resources:
    requests:
      storage: "1Gi"
---  
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: code-server-ingress
  namespace: code-server  
spec:
  gateways:
  - istio-system/apps-dns-ingressgateway
  hosts:
  - mycode.apps.orca.cloud.hancom.com
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: code-server
        port:
          number: 80
